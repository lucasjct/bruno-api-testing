meta {
  name: list-resource
  type: http
  seq: 2
}

get {
  url: {{baseUrl}}/{resource}/{{userId}}
  body: none
  auth: none
}

assert {
  res.status: eq 200
}

tests {
  const data = res.getBody();
  
  
  test("Response should be 200", function() {
    expect(res.getStatus()).to.equal(200);
  });
  
  test("key 'name' should be a string ", function(){ 
    expect(data.data.name).to.be.a("string");
   });
  
  test("key 'id' should be a number ", function(){ 
    expect(data.data.id).to.be.a('number');
   });
  
  test("Response headers should be OK", function(){
    expect(res.statusText).to.equal("OK")
  });
  
}

docs {
  This request list all resources following the query parameters `page=` and `per_page=`.   
  
  On the assert tab, we can create tests using assertions, but we can create tests using Tests tabs as well. 
}
